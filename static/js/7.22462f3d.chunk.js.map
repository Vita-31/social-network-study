{"version":3,"sources":["Component/Common/FormControl/Input.module.css","Validation/validation/validation.jsx","Component/Common/FormControl/FormControl.jsx","Component/Login/Login.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","ControlForm","input","meta","props","child","hasError","touched","error","className","styles","formControl","children","Textarea","restProps","Input","createField","placeholder","name","component","validator","text","validate","maxLengthLogin","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","formControlSummary","connect","state","isAuth","auth","login","logout","to","formData","email","password","rememberMe"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,YAAc,2BAA2B,MAAQ,qBAAqB,mBAAqB,oC,iCCD7G,oEAAO,IAAMC,EAAW,SAACC,GACrB,IAAGA,EACH,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAGA,EAAMG,OAASD,EACd,MAAM,gBAAN,OAAuBA,EAAvB,c,qRCHFE,EAAc,SAAC,GAAmC,EAAlCC,MAAmC,IAA5BC,EAA2B,EAA3BA,KAAgBC,GAAW,EAArBC,MAAqB,kBAE9CC,EAAWH,EAAKI,SAAWJ,EAAKK,MAEtC,OACI,sBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAQ,KAAtE,UACKJ,EAAMQ,SACNN,GAAY,+BAAOH,EAAKK,YAKxBK,EAAW,SAACT,GACrB,IAAOF,EAAoCE,EAApCF,MAAuBY,GAAaV,EAA7BD,KAA6BC,EAAvBC,MAApB,YAA2CD,EAA3C,IACA,OAAO,eAACH,EAAD,2BAAiBG,GAAjB,kBAAyB,oDAAcF,GAAWY,SAGhDC,EAAQ,SAACX,GAClB,IAAOF,EAAoCE,EAApCF,MAAuBY,GAAaV,EAA7BD,KAA6BC,EAAvBC,MAApB,YAA2CD,EAA3C,IACA,OAAO,eAACH,EAAD,2BAAiBG,GAAjB,kBAAyB,iDAAWF,GAAWY,SAG7CE,EAAc,SAACC,EAAaC,EAAMC,EAAWC,GAA/B,IAA0ChB,EAA1C,uDAAgD,GAAIiB,EAApD,uDAA2D,GAA3D,OACvB,gCACI,cAAC,IAAD,aAAOJ,YAAaA,EAAaC,KAAMA,EAAMC,UAAWA,EACjDG,SAAUF,GAAehB,IAFpC,IAGQiB,O,iCC9BZ,2FASME,EAAiBzB,YAAiB,IAqBlC0B,EAAiBC,YAAU,CAC7BC,KAAM,SADaD,EAnBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcnB,EAAW,EAAXA,MAC9B,OACI,uBAAMoB,SAAUD,EAAhB,UACKX,YAAY,QAAS,QAASD,IAAO,CAACnB,IAAU2B,IAChDP,YAAY,WAAY,WAAYD,IAAO,CAACnB,IAAU2B,GAAiB,CAACM,KAAM,aAC9Eb,YAAY,KAAM,aAAcD,IAAO,GAAI,CAACc,KAAM,YAAa,eAE5DrB,GAAS,qBAAKC,UAAWC,IAAOoB,mBAAvB,SACJtB,IAIT,8BACI,mDAiCDuB,uBALS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAIiB,CAACE,UAAOC,YAAjCL,EAvBD,SAAC3B,GAKX,OAAIA,EAAM6B,OACC,cAAC,IAAD,CAAUI,GAAI,aAIrB,gCACI,uCACA,cAACb,EAAD,CAAgBI,SAXT,SAACU,GACZlC,EAAM+B,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.22462f3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Input_formControl__3jseR\",\"error\":\"Input_error__3pumT\",\"formControlSummary\":\"Input_formControlSummary__3rhbX\"};","export const required = (value) => {\r\n    if(value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value)  => {\r\n    if(value.length > maxLength) {\r\n        return `Maxlength is ${maxLength} symbol`\r\n        return undefined\r\n    }\r\n}","import React from \"react\";\r\nimport styles from \"./Input.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst ControlForm = ({input, meta, child, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : \" \") }>\r\n            {props.children}\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <ControlForm {...props}> <textarea {...input} {...restProps}/></ControlForm>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <ControlForm {...props}> <input {...input} {...restProps}/></ControlForm>\r\n}\r\n\r\nexport const createField = (placeholder, name, component, validator, props={}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} component={component}\r\n               validate={validator} {...props}\r\n        /> {text}\r\n    </div>\r\n)","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/FormControl/FormControl\";\r\nimport {maxLengthCreator, required} from \"../../Validation/validation/validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from '../Common/FormControl/Input.module.css'\r\n\r\nconst maxLengthLogin = maxLengthCreator(40)\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Login', 'email', Input, [required, maxLengthLogin])}\r\n            {createField('Password', 'password', Input, [required, maxLengthLogin], {type: 'password'})}\r\n            {createField(null, 'rememberMe', Input, [], {type: 'checkbox'}, 'remember me')}\r\n            {\r\n                error && <div className={styles.formControlSummary}>\r\n                    {error}\r\n                </div>\r\n            }\r\n\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    let onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {login, logout})(Login)"],"sourceRoot":""}